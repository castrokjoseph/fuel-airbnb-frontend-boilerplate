import type { AbstractAddress } from '@fuel-ts/interfaces';
import type { ExcludeResourcesOption } from '../resource';
import type { TransactionRequestInput, CoinTransactionRequestInput, MessageTransactionRequestInput } from './input';
export declare const isRequestInputCoin: (input: TransactionRequestInput) => input is CoinTransactionRequestInput;
export declare const isRequestInputMessage: (input: TransactionRequestInput) => input is MessageTransactionRequestInput;
export declare const isRequestInputResource: (input: TransactionRequestInput) => input is CoinTransactionRequestInput | MessageTransactionRequestInput;
export declare const getRequestInputResourceOwner: (input: CoinTransactionRequestInput | MessageTransactionRequestInput) => import("@fuel-ts/interfaces").BytesLike;
export declare const isRequestInputResourceFromOwner: (input: CoinTransactionRequestInput | MessageTransactionRequestInput, owner: AbstractAddress) => boolean;
export declare const getAssetAmountInRequestInputs: (inputs: TransactionRequestInput[], assetId: string, baseAsset: string) => import("@fuel-ts/math").BN;
export declare const cacheRequestInputsResources: (inputs: TransactionRequestInput[]) => Required<ExcludeResourcesOption>;
export declare const cacheRequestInputsResourcesFromOwner: (inputs: TransactionRequestInput[], owner: AbstractAddress) => ExcludeResourcesOption;
//# sourceMappingURL=helpers.d.ts.map