export declare const defaultSnapshotConfigs: {
    chainConfigJson: {
        chain_name: string;
        consensus_parameters: {
            V1: {
                tx_params: {
                    V1: {
                        max_inputs: number;
                        max_outputs: number;
                        max_witnesses: number;
                        max_gas_per_tx: number;
                        max_size: number;
                        max_bytecode_subsections: number;
                    };
                };
                predicate_params: {
                    V1: {
                        max_predicate_length: number;
                        max_predicate_data_length: number;
                        max_message_data_length: number;
                        max_gas_per_predicate: number;
                    };
                };
                script_params: {
                    V1: {
                        max_script_length: number;
                        max_script_data_length: number;
                    };
                };
                contract_params: {
                    V1: {
                        contract_max_size: number;
                        max_storage_slots: number;
                    };
                };
                fee_params: {
                    V1: {
                        gas_price_factor: number;
                        gas_per_byte: number;
                    };
                };
                chain_id: number;
                gas_costs: {
                    V1: {
                        add: number;
                        addi: number;
                        aloc: number;
                        and: number;
                        andi: number;
                        bal: number;
                        bhei: number;
                        bhsh: number;
                        burn: number;
                        cb: number;
                        cfei: number;
                        cfsi: number;
                        div: number;
                        divi: number;
                        eck1: number;
                        ecr1: number;
                        ed19: number;
                        eq: number;
                        exp: number;
                        expi: number;
                        flag: number;
                        gm: number;
                        gt: number;
                        gtf: number;
                        ji: number;
                        jmp: number;
                        jne: number;
                        jnei: number;
                        jnzi: number;
                        jmpf: number;
                        jmpb: number;
                        jnzf: number;
                        jnzb: number;
                        jnef: number;
                        jneb: number;
                        lb: number;
                        log: number;
                        lt: number;
                        lw: number;
                        mint: number;
                        mlog: number;
                        mod_op: number;
                        modi: number;
                        move_op: number;
                        movi: number;
                        mroo: number;
                        mul: number;
                        muli: number;
                        mldv: number;
                        noop: number;
                        not: number;
                        or: number;
                        ori: number;
                        poph: number;
                        popl: number;
                        pshh: number;
                        pshl: number;
                        ret: number;
                        rvrt: number;
                        sb: number;
                        sll: number;
                        slli: number;
                        srl: number;
                        srli: number;
                        srw: number;
                        sub: number;
                        subi: number;
                        sw: number;
                        sww: number;
                        time: number;
                        tr: number;
                        tro: number;
                        wdcm: number;
                        wqcm: number;
                        wdop: number;
                        wqop: number;
                        wdml: number;
                        wqml: number;
                        wddv: number;
                        wqdv: number;
                        wdmd: number;
                        wqmd: number;
                        wdam: number;
                        wqam: number;
                        wdmm: number;
                        wqmm: number;
                        xor: number;
                        xori: number;
                        call: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        ccp: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        croo: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        csiz: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        k256: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        ldc: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        logd: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        mcl: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        mcli: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        mcp: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        mcpi: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        meq: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        retd: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        s256: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        scwq: {
                            HeavyOperation: {
                                base: number;
                                gas_per_unit: number;
                            };
                        };
                        smo: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        srwq: {
                            HeavyOperation: {
                                base: number;
                                gas_per_unit: number;
                            };
                        };
                        swwq: {
                            HeavyOperation: {
                                base: number;
                                gas_per_unit: number;
                            };
                        };
                        contract_root: {
                            LightOperation: {
                                base: number;
                                units_per_gas: number;
                            };
                        };
                        state_root: {
                            HeavyOperation: {
                                base: number;
                                gas_per_unit: number;
                            };
                        };
                        new_storage_per_byte: number;
                        vm_initialization: {
                            HeavyOperation: {
                                base: number;
                                gas_per_unit: number;
                            };
                        };
                    };
                };
                base_asset_id: string;
                block_gas_limit: number;
                privileged_address: string;
            };
        };
        consensus: {
            PoA: {
                signing_key: string;
            };
        };
    };
    metadataJson: {
        chain_config: string;
        table_encoding: {
            Json: {
                filepath: string;
            };
        };
    };
    stateConfigJson: {
        coins: {
            tx_id: string;
            output_index: number;
            tx_pointer_block_height: number;
            tx_pointer_tx_idx: number;
            owner: string;
            amount: number;
            asset_id: string;
        }[];
        messages: {
            sender: string;
            recipient: string;
            nonce: string;
            amount: number;
            data: string;
            da_height: number;
        }[];
        contracts: never[];
        block_height: number;
        da_block_height: number;
    };
};
export declare const defaultConsensusKey = "0xa449b1ffee0e2205fa924c6740cc48b3b473aa28587df6dab12abc245d1f5298";
//# sourceMappingURL=defaultSnapshotConfigs.d.ts.map