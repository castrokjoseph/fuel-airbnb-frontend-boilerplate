import type { TransactionResultReceipt } from 'fuels';
export declare const useTransactionReceipts: ({ txId }: {
    txId?: string | undefined;
}) => {
    error: Error | null;
    isError: boolean;
    isPending: false;
    isLoading: false;
    isLoadingError: false;
    isRefetchError: boolean;
    isSuccess: boolean;
    status: "error" | "success";
    dataUpdatedAt: number;
    errorUpdatedAt: number;
    failureCount: number;
    failureReason: Error | null;
    errorUpdateCount: number;
    isFetched: boolean;
    isFetchedAfterMount: boolean;
    isFetching: boolean;
    isInitialLoading: boolean;
    isPaused: boolean;
    isPlaceholderData: boolean;
    isRefetching: boolean;
    isStale: boolean;
    refetch: (options?: import("@tanstack/react-query").RefetchOptions | undefined) => Promise<import("@tanstack/react-query").QueryObserverResult<TransactionResultReceipt[] | null, Error>>;
    fetchStatus: import("@tanstack/react-query").FetchStatus;
} & {
    transactionReceipts: TransactionResultReceipt[] | null;
};
