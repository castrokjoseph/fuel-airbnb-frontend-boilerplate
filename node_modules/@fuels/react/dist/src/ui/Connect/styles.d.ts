/// <reference types="react" />
import * as Dialog from '@radix-ui/react-dialog';
import { BackIcon as CBackIcon } from './icons/BackIcon';
import { CloseIcon as CCloseIcon } from './icons/CloseIcon';
export declare const DialogOverlay: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<Dialog.DialogOverlayProps & import("react").RefAttributes<HTMLDivElement>, never>> & Omit<import("react").ForwardRefExoticComponent<Dialog.DialogOverlayProps & import("react").RefAttributes<HTMLDivElement>>, keyof import("react").Component<any, {}, any>>;
export declare const DialogContent: import("react").ForwardRefExoticComponent<Dialog.DialogContentProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const DialogTitle: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<Dialog.DialogTitleProps & import("react").RefAttributes<HTMLHeadingElement>, never>> & Omit<import("react").ForwardRefExoticComponent<Dialog.DialogTitleProps & import("react").RefAttributes<HTMLHeadingElement>>, keyof import("react").Component<any, {}, any>>;
export declare const DialogMain: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>>;
export declare const BackIcon: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("../types").SvgIconProps, never>> & Omit<typeof CBackIcon, keyof import("react").Component<any, {}, any>>;
export declare const CloseIcon: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("../types").SvgIconProps, never>> & Omit<typeof CCloseIcon, keyof import("react").Component<any, {}, any>>;
export declare const FuelRoot: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>>;
export declare const PlaceholderLoader: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>>;
